# options for analysis running
run:
  # default concurrency is a available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  deadline: 2m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle, default is "colored-line-number"
  formats: tab

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true


# all available settings of specific linters
linters-settings:
  varnamelen:
    # The longest distance, in source lines, that is being considered a "small scope." (defaults to 5)
    # Variables used in at most this many lines will be ignored.
    max-distance: 5
    # The minimum length of a variable's name that is considered "long." (defaults to 3)
    # Variable names that are at least this long will be ignored.
    min-name-length: 3
    # Check method receivers. (defaults to false)
    check-receiver: false
    # Check named return values. (defaults to false)
    check-return: false
    # Check type parameters. (defaults to false)
    check-type-param: false
    # Ignore "ok" variables that hold the bool return value of a type assertion. (defaults to false)
    ignore-type-assert-ok: false
    # Ignore "ok" variables that hold the bool return value of a map index. (defaults to false)
    ignore-map-index-ok: false
    # Ignore "ok" variables that hold the bool return value of a channel receive. (defaults to false)
    ignore-chan-recv-ok: false
    # Optional list of variable names that should be ignored completely. (defaults to empty list)
    ignore-names:
      - err
    # Optional list of variable declarations that should be ignored completely. (defaults to empty list)
    # Entries must be in one of the following forms (see below for examples):
    # - for variables, parameters, named return values, method receivers, or type parameters:
    #   <name> <type>  (<type> can also be a pointer/slice/map/chan/...)
    # - for constants: const <name>
    ignore-decls:
      - c echo.Context
      - c *fiber.Ctx
      - t testing.T
      - f *foo.Bar
      - e error
      - i int
      - const C
      - T any
      - m map[string]int
  tagliatelle:
    # Check the struck tag name case.
    case:
      # Use the struct field name to check the name of the struct tag.
      # Default: false
      use-field-name: true
      rules:
        # Any struct tag type can be used.
        # Support string case: `camel`, `pascal`, `kebab`, `snake`, `upperSnake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`, `header`.
        json: snake
        yaml: camel
        xml: camel
        toml: camel
        bson: camel
        avro: snake
        mapstructure: kebab
        env: upperSnake
        envconfig: upperSnake
  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: github.com/msmkdenis/yap-gophkeeper
  fieldalignment:
    # print struct with more effective memory layout or not, false by default
    suggest-new: true
  revive:
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unreachable-code

linters:
  disable-all: true
  enable:
    - cyclop
    #     - depguard
    - dogsled
    - dupl
    - errcheck
    - errorlint
    - exhaustive
    #     - exhaustruct
    - forbidigo
    #     - funlen
    #     - gci
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    #    - godot
    #    - godox I like TODOs
    - gofmt
    - gofumpt
    - goheader
    - goimports
    #     - mnd
    - gomoddirectives
    - gomodguard
    - gosec
    - gosimple
    - govet
    #    - ifshort
    - ireturn
    #    - lll
    - makezero
    - misspell
    - ineffassign
    - misspell
    - nakedret
    - nestif
    - nilnil
    #    - nlreturn
    - nolintlint
    - prealloc
    - predeclared
    - rowserrcheck
    - revive
    - staticcheck
    - stylecheck
    #   - tagliatelle
    #   - testpackage
    - thelper
    - tenv
    - typecheck
    - unconvert
    - unparam
    - unused
    #     - varnamelen
    - whitespace
    #     - wrapcheck
    #     - wsl

issues:
  exclude-use-default: true
  max-issues-per-linter: 100
  max-same-issues: 4
  new: false
